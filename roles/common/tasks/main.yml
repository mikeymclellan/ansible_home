---
- name: set hostname
  hostname: name={{ inventory_hostname }}

- name: "Build hosts file"
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=present
  when: "hostvars[item]['ansible_default_ipv4'] is defined"
  with_items: "{{ groups['all'] }}"

- name: Copy timezone file
  template: src=timezone dest=/etc/timezone mode=0644
  register: timezone_result

- name: Set timezone
  command: dpkg-reconfigure -f noninteractive tzdata
  when: timezone_result.changed

- name: Some shell aliases for the user
  lineinfile: dest=/home/{{ ansible_ssh_user }}/.bashrc line="{{ item }}"
  with_items:
  - "alias ls='ls -lhG'"

- name: Disable logging to /dev/xconsole   # By default nobody reads from /dev/xconsole and thus it overflows causing "action 'action 17' suspended" errors to syslog
  replace:
    dest=/etc/rsyslog.conf
    regexp='^daemon.*mail(.|\n)*?/dev/xconsole'
    replace='# Removed by Ansible'

- name: Set some /boot/config.txt parameters
  lineinfile:
    dest: /boot/config.txt
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^max_usb_current=1', line: 'max_usb_current=1' }

- name: Enable SPI
  lineinfile: dest=/boot/config.txt regexp='^#(dtparam=spi=on)$' line='\1' backrefs=yes
  notify: reboot

- name: Use tmpfs for tmp folder
  lineinfile: dest=/etc/fstab line='tmpfs           /tmp              tmpfs   defaults,noatime,mode=1777 0       0'

- name: Use tmpfs for log folder
  lineinfile: dest=/etc/fstab line='tmpfs           /var/log          tmpfs   defaults,noatime,mode=0755 0       0'

- name: Use tmpfs for /var/run folder
  lineinfile: dest=/etc/fstab line='tmpfs           /var/run          tmpfs   defaults,noatime,mode=0755 0       0'

#- name: Use tmpfs for lock folder
#  lineinfile: dest=/etc/fstab line='tmpfs           /var/lock         tmpfs   defaults,noatime,mode=0755 0       0'

#- name: Check if swap enabled
#  shell: swapon -s | wc -l
#  register: swap_enabled
#
#- name: Disable swap
#  shell: "{{ item }}"
#  with_items:
#  - dphys-swapfile swapoff
#  - dphys-swapfile uninstall
#  - update-rc.d dphys-swapfile disable
#  when: swap_enabled.stdout != "1"

#- cron:
#    name: Update Duck DNS
#    minute: */5
#    job: echo url="https://www.duckdns.org/update?domains=mclellan&token=8e2e13b4-748e-4c0d-ba0c-aeb5e56beb8e&ip=" | curl -k -K - > /dev/null 2>&1

- include: user.yml

# Disable distributing all mikey's SSH keys to all hosts as it fails when one machine is down or we're not at home.
# Plus we can just forward our SSH keys which is nicer.
#- include: distribute_ssh_keys.yml

- name: Enable ssh
  service: name=ssh enabled=yes state=started